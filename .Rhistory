q()
help.start()
demo()
q()
Sys.getenv("PATH")
setwd('C://Users/jjj/Desktop/Markov_25.3/')
2011<-read_dta("Model_2011.dta")
liabrary(haven)
library(haven)
2011<-read_dta("Model_2011.dta")
Model_2011<-read_dta("Model_2011.dta")
Model_2013<-read_dta("Model_2013.dta")
Model_2015<-read_dta("Model_2015.dta")
View(Model_2013)
View(Model_2015)
View(Model_2011)
View(Model_2013)
View(Model_2015)
View(Model_2011)
View(Model_2013)
View(Model_2011)
Model_2013 <- Model_2013[Model_2013$ID %in% Model_2011$ID, ]
View(Model_2013)
View(Model_2011)
View(Model_2013)
View(Model_2011)
Model_2015 <- Model_2015[Model_2015$ID %in% Model_2011$ID, ]
View(Model_2015)
View(Model_2013)
View(Model_2015)
Model_2011 <- Model_2011[Model_2011$ID %in% Model_2015$ID, ]
Model_2013 <- Model_2013[Model_2013$ID %in% Model_2015$ID, ]
Model_2011 <- Model_2011[Model_2011$ID %in% Model_2013$ID, ]
Model_2015 <- Model_2015[Model_2015$ID %in% Model_2013$ID, ]
View(Model_2011)
# 筛选 Model_2011 中满足条件的行
Model_2011_filtered <- Model_2011[2011 - Model_2011$ba002_1 >= 60 | Model_2011$ba004 >= 60, ]
View(Model_2011_filtered)
View(Model_2011)
View(Model_2011_filtered)
View(Model_2011)
View(Model_2011_filtered)
View(Model_2011)
Model_2013 <- Model_2013[!is.na(Model_2013$ID), ]
Model_2011 <- Model_2011[!is.na(Model_2011$ID), ]
View(Model_2011_filtered)
View(Model_2011)
View(Model_2011_filtered)
View(Model_2011)
View(Model_2011_filtered)
View(Model_2011)
View(Model_2011_filtered)
View(Model_2011)
View(Model_2011_filtered)
Model_2011_filtered <- Model_2011_filtered[!is.na(Model_2011$ID), ]
Model_2011_filtered <- Model_2011_filtered[!is.na(Model_2011_filtered$ID), ]
Model_2015<-read_dta("Model_2015.dta")
Model_2011<-read_dta("Model_2011.dta")
Model_2013<-read_dta("Model_2013.dta")
# 筛选 Model_2011 中满足条件的行
Model_2011_filtered <- Model_2011[2011 - Model_2011$ba002_1 >= 60 | Model_2011$ba004 >= 60, ]
Model_2011_filtered <- Model_2011_filtered[!is.na(Model_2011$ID), ]
Model_2011_filtered <- Model_2011_filtered[!is.na(Model_2011_filtered$ID), ]
Model_2013 <- Model_2013[Model_2013$ID %in% Model_2011_filtered$ID, ]
Model_2015 <- Model_2015[Model_2013$ID %in% Model_2011_filtered$ID, ]
Model_2015 <- Model_2015[Model_2015$ID %in% Model_2011_filtered$ID, ]
Model_2011_filtered$ba004 <- 2011 - Model_2011_filtered$ba002_1
colnames(Model_2011)[colnames(Model_2011) == "ba004"] <- "age"
View(Model_2011)
View(Model_2011_filtered)
colnames(Model_2011_filtered)[colnames(Model_2011_filtered) == "ba004"] <- "age"
Model_2011_filtered$ba002_1 <- NULL
charls<-read_dta('charls.dta')
View(charls)
colnames(Model_2011_filtered)[colnames(Model_2011_filtered) == "bl_hgb"] <- "Hb"
# 将 be001 列的值进行转换
Model_2011_filtered$be001 <- ifelse(Model_2011_filtered$be001 %in% c(1, 2), 1, ifelse(Model_2011_filtered$be001 %in% c(3, 4, 5, 6), 2, Model_2011_filtered$be001))
Model_2011_filtered$be002 <- NULL
Model_2011_filtered$iwy <- NULL
sum(is.na(Model_2011_filtered$wspeed))
sum(is.na(Model_2011_filtered$wspeed1))
sum(is.na(Model_2011_filtered$wspeed2))
Model_2011_filtered$wspeed <- NULL
Model_2013_filtered<-Model_2013
View(Model_2013_filtered)
Model_2013_filtered$ba002_1 <- NULL
Model_2013_filtered$ba004 <- NULL
Model_2013_filtered <- merge(Model_2013_filtered, Model_2011_filtered[, c("ID", "age")], by = "ID", all.x = TRUE)
Model_2013_filtered$age <- Model_2013_filtered$age + 2
View(Model_2011)
View(Model_2011_filtered)
View(Model_2013_filtered)
View(Model_2011)
View(Model_2013)
View(Model_2011)
View(charls)
View(Model_2011)
View(Model_2013_filtered)
View(Model_2011_filtered)
Model_2015_filtered <- Model_2015
Model_2015_filtered <- merge(Model_2015_filtered, Model_2011_filtered[, c("ID", "age")], by = "ID", all.x = TRUE)
View(Model_2015_filtered)
Model_2015_filtered$age <- Model_2015_filtered$age + 4
Model_2013_filtered$ba002_1 <- NULL
Model_2015_filtered$ba002_1 <- NULL
Model_2015_filtered$ba004 <- NULL
colnames(Model_2013_filtered)[colnames(Model_2013_filtered) == "bl_hgb"] <- "Hb"
colnames(Model_2015_filtered)[colnames(Model_2015_filtered) == "bl_hgb"] <- "Hb"
View(Model_2013_filtered)
View(Model_2011_filtered)
View(Model_2015_filtered)
Model_2015_filtered$be002 <- NULL
Model_2013_filtered$be002 <- NULL
Model_2013_filtered$iwy <- NULL
Model_2013_filtered$wspeed <- NULL
Model_2015_filtered$wspeed <- NULL
Model_2015_filtered$iwy <- NULL
View(Model_2013_filtered)
View(Model_2011_filtered)
Model_2013_filtered <- merge(Model_2013_filtered, Model_2011_filtered[, c("ID", "bd001")], by = "ID", all.x = TRUE)
View(Model_2013_filtered)
Model_2015_filtered$bd001.x <- NULL
Model_2013_filtered$bd001.x <- NULL
colnames(Model_2015_filtered)[colnames(Model_2015_filtered) == "bd001.y"] <- "bd001"
colnames(Model_2013_filtered)[colnames(Model_2013_filtered) == "bd001.y"] <- "bd001"
View(Model_2015_filtered)
Model_2015_filtered <- merge(Model_2015_filtered, Model_2011_filtered[, c("ID", "bd001")], by = "ID", all.x = TRUE)
Model_2015_filtered$bd001.x <- NULL
colnames(Model_2015_filtered)[colnames(Model_2015_filtered) == "bd001.y"] <- "bd001"
View(Model_2015_filtered)
View(Model_2011_filtered)
View(Model_2013_filtered)
View(Model_2015_filtered)
View(Model_2013_filtered)
View(Model_2015_filtered)
View(Model_2013_filtered)
View(Model_2011_filtered)
View(Model_2013_filtered)
View(Model_2011_filtered)
View(Model_2013_filtered)
View(Model_2015_filtered)
View(Model_2013_filtered)
Model_2013_filtered <- Model_2013_filtered[Model_2013_filtered$ID %in% Model_2015_filtered$ID, ]
Model_2011_filtered <- Model_2011_filtered[Model_2011_filtered$ID %in% Model_2015_filtered$ID, ]
Model_2011_filtered <- Model_2011_filtered[Model_2011_filtered$ID %in% Model_2013_filtered$ID, ]
Model_2015_filtered <- Model_2015_filtered[Model_2015_filtered$ID %in% Model_2013_filtered$ID, ]
View(Model_2011_filtered)
View(Model_2013_filtered)
View(Model_2015_filtered)
write_dta(Model_2011_filtered, "Model_2011_filtered.dta")
write_dta(Model_2013_filtered, "Model_2013_filtered.dta")
write_dta(Model_2015_filtered, "Model_2015_filtered.dta")
View(Model_2011_filtered)
invalid_ids <- unique(c(
Model_2011_filtered$ID[apply(Model_2011_filtered, 1, function(x) any(is.na(x)))],
Model_2013_filtered$ID[apply(Model_2013_filtered, 1, function(x) any(is.na(x)))],
Model_2015_filtered$ID[apply(Model_2015_filtered, 1, function(x) any(is.na(x)))]
))
Model_2011_filtered <- Model_2011_filtered[!Model_2011_filtered$ID %in% invalid_ids, ]
Model_2013_filtered <- Model_2013_filtered[!Model_2013_filtered$ID %in% invalid_ids, ]
Model_2015_filtered <- Model_2015_filtered[!Model_2015_filtered$ID %in% invalid_ids, ]
View(Model_2011_filtered)
Model_2011_filtered <- read_dta("Model_2011_filtered.dta")
Model_2013_filtered <- read_dta("Model_2013_filtered.dta")
Model_2015_filtered <- read_dta("Model_2015_filtered.dta")
View(Model_2011_filtered)
View(Model_2013_filtered)
View(Model_2015_filtered)
View(Model_2013_filtered)
View(Model_2015_filtered)
View(Model_2013_filtered)
View(Model_2011_filtered)
colnames(Model_2011_filtered)
vars_to_check <- c("asthmae", "age", "bd001","be001","Hb","bmi","cancre","cesd10","communityID","da023","da049","da051_1_"    ,"da051_2_"    ,"da051_3_"    ,"dc012"
, "dc018"      , "diabe"      , "digeste"    , "gender"     , "hearte"     , "hibpe"      , "householdID" ,"lunge"
, "marry"      , "memrye"     , "mheight"    , "qc003"       ,"qc004"     ,  "qc005"      , "qc006"      , "rural"
, "satlife"   ,  "sleep"      , "stroke"     , "wave"      ,  "wspeed1"     ,"wspeed2")
merged_data <- merge(Model_2011_filtered, Model_2013_filtered, by = "ID", all = TRUE)
merged_data <- merge(merged_data, Model_2015_filtered, by = "ID", all = TRUE)
invalid_ids <- merged_data$ID[apply(merged_data[, c(vars_to_check)], 1, function(x) any(is.na(x)))]
View(merged_data)
Model_2011_filtered <- Model_2011_filtered[!Model_2011_filtered$ID %in% invalid_ids, ]
View(Model_2011_filtered)
View(merged_data)
Model_2011_filtered <- read_dta("Model_2011_filtered.dta")
ID_2011 <- Model_2011_filtered$ID[apply(Model_2011_filtered, 1, function(x) any(is.na(x)))]
ID_2013 <- Model_2013_filtered$ID[apply(Model_2013_filtered, 1, function(x) any(is.na(x)))]
ID_2014 <- Model_2014_filtered$ID[apply(Model_2014_filtered, 1, function(x) any(is.na(x)))]
ID_2015 <- Model_2015_filtered$ID[apply(Model_2015_filtered, 1, function(x) any(is.na(x)))]
common_ids <- intersect(intersect(ID_2011, ID_2013), ID_2015)
Model_2011_filtered <- Model_2011_filtered[!Model_2011_filtered$ID %in% common_ids, ]
View(Model_2011_filtered)
Model_2013_filtered <- Model_2013_filtered[!Model_2013_filtered$ID %in% common_ids, ]
Model_2015_filtered <- Model_2015_filtered[!Model_2015_filtered$ID %in% common_ids, ]
View(Model_2011_filtered)
View(Model_2013_filtered)
View(Model_2015_filtered)
rm(merged_data)
rm(Model_2011)
source("~/.active-rstudio-document")
Model_2011_filtered<-read_dta("Model_2011_filtered.dta")
Model_2013_filtered<-read_dta("Model_2013_filtered.dta")
Model_2015_filtered<-read_dta("Model_2015_filtered.dta")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
View(imputed_Model_2011_filtered_frame)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
View(imputed_Model_2011_filtered)
View(imputed_Model_2011_filtered_frame)
sum(is.na(Model_2011_filtered$wspeed1))
View(Model_2011_filtered)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
imputed_Model_2011_filtered$OOBerror
library(missForest)
# 选择需要插补的相关变量
variables_to_impute <- Model_2011_filtered[, c("wspeed1", "wspeed2")]
# 使用 missForest 插补这些相关变量的缺失值
imputed_Model_2011_filtered <- missForest(variables_to_impute)
library(missForest)
# 选择需要插补的相关变量
variables_to_impute <- Model_2011_filtered[, c("wspeed1", "wspeed2")]
# 使用 missForest 插补这些相关变量的缺失值
imputed_Model_2011_filtered <- missForest(variables_to_impute)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
library(missForest)
# 选择需要插补的相关变量
variables_to_impute <- Model_2011_filtered[, c("wspeed1", "wspeed2")]
# 使用 missForest 插补这些相关变量的缺失值
imputed_Model_2011_filtered <- missForest(variables_to_impute)
# 获取插补后的数据框
imputed_Model_2011_filtered_frame <- imputed_Model_2011_filtered$ximp
# 将插补后的数据精确到小数点后两位
imputed_Model_2011_filtered_frame <- round(imputed_Model_2011_filtered_frame, 2)
# 将插补后的数据回传到原数据框中
Model_2011_filtered[, c("wspeed1", "wspeed2")] <- imputed_Model_2011_filtered_frame
source("~/.active-rstudio-document")
# 使用 missForest 插补这些相关变量的缺失值
imputed_Model_2011_filtered <- missForest( c("wspeed1", "wspeed2")_to_impute)
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
View(imputed_Model_2011_filtered)
library(missForest)
# 选择需要插补的相关变量
variables_to_impute <- Model_2011_filtered[, c("wspeed1", "wspeed2")]
# 使用 missForest 插补这些相关变量的缺失值
imputed_data <- missForest(variables_to_impute)
# 获取插补后的数据框
imputed_data_frame <- imputed_data$ximp
# 将插补后的数据精确到小数点后两位
imputed_data_frame <- round(imputed_data_frame, 2)
# 将插补后的数据回传到原数据框中
Model_2011_filtered[, c("wspeed1", "wspeed2")] <- imputed_data_frame
# 查看插补后的数据框
head(Model_2011_filtered)
View(imputed_data)
source("~/.active-rstudio-document")
# 加载 missForest 包
library(missForest)
# 选择需要插补的相关变量
variables_to_impute <- Model_2011_filtered[, c("wspeed1", "wspeed2")]
# 使用 missForest 插补这些相关变量的缺失值
imputed_data <- missForest(variables_to_impute)
# 获取插补后的数据框
imputed_data_frame <- imputed_data$ximp
# 将插补后的数据精确到小数点后四位
imputed_data_frame <- round(imputed_data_frame, 4)
# 将插补后的数据回传到原数据框中
Model_2011_filtered[, c("wspeed1", "wspeed2")] <- imputed_data_frame
# 查看插补后的数据框
head(Model_2011_filtered)
View(imputed_data)
# 加载 missForest 包
library(missForest)
# 选择需要插补的相关变量
variables_to_impute <- Model_2011_filtered[, c("wspeed1", "wspeed2")]
# 使用 missForest 插补这些相关变量的缺失值
imputed_Model_2011_filtered <- missForest(variables_to_impute)
# 获取插补后的数据框
imputed_Model_2011_filtered_frame <- imputed_Model_2011_filtered$ximp
# 将插补后的数据精确到小数点后四位
imputed_Model_2011_filtered_frame <- round(imputed_Model_2011_filtered_frame, 4)
# 将插补后的数据回传到原数据框中
Model_2011_filtered[, c("wspeed1", "wspeed2")] <- imputed_Model_2011_filtered_frame
# 查看插补后的数据框
head(Model_2011_filtered)
source("~/.active-rstudio-document")
